/*
  This file is automatically generated. Any changes will be overwritten.
  Modify login.component.ts instead.
*/
import { Injector, OnInit, OnDestroy } from '@angular/core';
import { NavigationEnd, Router, ActivatedRoute } from '@angular/router';
import { Location } from '@angular/common';
import { Subscription } from 'rxjs';

import { SecurityService } from '../security.service';

/*
  Component properties set from design-time.
*/
const { components } = require('../../../../meta/pages/login.json');

export class LoginGenerated implements OnInit, OnDestroy {
  components = components;
  // Array of messages displayed by the notification component.
  messages = [];

  router: Router;

  route: ActivatedRoute;

  _location: Location;

  subscription: Subscription;

  security: SecurityService;

  parameters: any;

  Security: any;

  ngOnInit() {
    this.subscription = this.router.events.subscribe(event => {
      if (event instanceof NavigationEnd && this instanceof <any>this.route.component) {
        this.parameters = this.route.snapshot.params;

        this.load();
      }
    });
  }

  ngOnDestroy() {
    this.subscription.unsubscribe();
  }


  load() {

  }

  login0Login(event: any) {
    this.security.login(`${event.username}`, `${event.password}`)
    .then(result => {

    }, result => {
      this.messages.push({ severity: "error", summary: `Error`, detail: `${result.error}` });
    });
  }

  login0Register(event: any) {
    this.router.navigate([{ outlets: { popup: null } }]).then(() => this.router.navigate(['register-user']));
  }

  constructor(injector: Injector) {
    this.router = injector.get(Router);

    this._location = injector.get(Location);

    this.route = injector.get(ActivatedRoute);

    this.security = injector.get(SecurityService);
  }
}
